{
	"name": "transformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "datedim",
						"type": "DatasetReference"
					},
					"name": "datedim"
				},
				{
					"dataset": {
						"referenceName": "regiondim",
						"type": "DatasetReference"
					},
					"name": "regiondim"
				},
				{
					"dataset": {
						"referenceName": "weathermetrics",
						"type": "DatasetReference"
					},
					"name": "weathermetrics"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "datacleaned",
						"type": "DatasetReference"
					},
					"name": "dateclean"
				},
				{
					"dataset": {
						"referenceName": "regiondimclean",
						"type": "DatasetReference"
					},
					"name": "regiondimclean"
				},
				{
					"dataset": {
						"referenceName": "weathermetricsclean",
						"type": "DatasetReference"
					},
					"name": "weathermetricsclean"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          DateID as string,",
				"          Date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> datedim",
				"source(output(",
				"          RegionID as integer,",
				"          RegionName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> regiondim",
				"source(output(",
				"          DateID as integer,",
				"          RegionID as integer,",
				"          AverageTemperature as integer,",
				"          Humidity as integer,",
				"          WindSpeed as integer,",
				"          Rainfall as integer,",
				"          SunshineHours as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> weathermetrics",
				"datedim sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DateID as string,",
				"          Date as string",
				"     ),",
				"     partitionFileNames:['datedimClean'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> dateclean",
				"regiondim sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          RegionID as string,",
				"          RegionName as string",
				"     ),",
				"     partitionFileNames:['regiondimclean'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> regiondimclean",
				"weathermetrics sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DateID as string,",
				"          RegionID as string,",
				"          AverageTemperature as string,",
				"          Humidity as string,",
				"          WindSpeed as string,",
				"          Rainfall as string,",
				"          SunshineHours as string",
				"     ),",
				"     partitionFileNames:['weathermetricsclean'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> weathermetricsclean"
			]
		}
	}
}